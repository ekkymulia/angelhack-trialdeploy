generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id        String    @id @default(auto()) @map("_id") @db.ObjectId
  nama      String
  role_id   String
  email     String    @unique
  password  String
  Merchants Merchant[]
  Customers Customer[]
  Reviews   Review[]
  Bills     Bill[]
  OrderBills OrderBill[]
  LongtermReviewStores LongtermReviewStore[]
}

model Merchant {
  id                   String                 @id @default(auto()) @map("_id") @db.ObjectId
  user_id              String                 @db.ObjectId
  alamat               String
  provinsi_id          String
  kota_id              String
  kecamatan_id         String
  kelurahan_id         String
  longitude            Float
  latitude             Float
  no_telp              String
  email_verified       Boolean                @default(false)
  tipe_bisnis          String
  rata_rata_penjualan  Float
  jenis_perangkat      String
  Bills                Bill[]
  LongtermReviewStores LongtermReviewStore[]
  User                 User                   @relation(fields: [user_id], references: [id])
  MerchantProduks      MerchantProduk[]
}

model Customer {
  id           String @id @default(auto()) @map("_id") @db.ObjectId
  user_id      String @db.ObjectId
  alamat       String
  provinsi_id  String
  kota_id      String
  kecamatan_id String
  kelurahan_id String
  longitude    Float
  latitude     Float
  no_telp      String
  User         User   @relation(fields: [user_id], references: [id])
}

model MerchantProduk {
  id          String               @id @default(auto()) @map("_id") @db.ObjectId
  merchant_id String               @db.ObjectId
  nama        String
  gambar      String
  deskripsi   String
  qty         Int
  price       Float
  discount    Float
  Variants    MerchantProdukVariant[]
  OrderBills  OrderBill[]
  Merchant    Merchant             @relation(fields: [merchant_id], references: [id])
}

model MerchantProdukVariant {
  id                 String         @id @default(auto()) @map("_id") @db.ObjectId
  merchant_produk_id String         @db.ObjectId
  nama               String
  qty                Int
  price              Float
  discount           Float
  MerchantProduk     MerchantProduk @relation(fields: [merchant_produk_id], references: [id])
}

model OrderBill {
  id                 String         @id @default(auto()) @map("_id") @db.ObjectId
  bill_id            String         @db.ObjectId
  user_id            String         @db.ObjectId
  merchant_produk_id String         @db.ObjectId
  qty                Int
  total_price        Float
  notes              String
  Bill               Bill           @relation(fields: [bill_id], references: [id])
  User               User           @relation(fields: [user_id], references: [id])
  MerchantProduk     MerchantProduk @relation(fields: [merchant_produk_id], references: [id])
}

model Bill {
  id                 String         @id @default(auto()) @map("_id") @db.ObjectId
  user_id            String         @db.ObjectId
  merchant_id        String         @db.ObjectId
  subtotal           Float
  delivery_price     Float
  total_bill         Float
  notes              String
  delivery_option_id String         @db.ObjectId
  User               User           @relation(fields: [user_id], references: [id])
  Merchant           Merchant       @relation(fields: [merchant_id], references: [id])
  DeliveryOption     DeliveryOption @relation(fields: [delivery_option_id], references: [id])
  OrderBills         OrderBill[]
  Reviews            Review[]       
  LongtermReviewStores LongtermReviewStore[]     
}

model Review {
  id                   String                 @id @default(auto()) @map("_id") @db.ObjectId
  user_id              String                 @db.ObjectId
  bill_id              String                 @db.ObjectId
  message              String
  rating               Int
  User                 User                   @relation(fields: [user_id], references: [id])
  Bill                 Bill                   @relation(fields: [bill_id], references: [id])
  LongtermReviewStores LongtermReviewStore[]
}

model LongtermReviewStore {
  id                             String                     @id @default(auto()) @map("_id") @db.ObjectId
  review_id                      String                     @db.ObjectId
  user_id                        String                     @db.ObjectId
  merchant_id                    String                     @db.ObjectId
  bill_id                        String                     @db.ObjectId
  things_longterm_review_store_id String                    @db.ObjectId
  things_to_remember             String
  Review                         Review                     @relation(fields: [review_id], references: [id])
  User                           User                       @relation(fields: [user_id], references: [id])
  Merchant                       Merchant                   @relation(fields: [merchant_id], references: [id])
  Bill                           Bill                       @relation(fields: [bill_id], references: [id])
  ThingsLongtermReviewStore      ThingsLongtermReviewStore  @relation(fields: [things_longterm_review_store_id], references: [id])
}

model ThingsLongtermReviewStore {
  id                     String                 @id @default(auto()) @map("_id") @db.ObjectId
  nama                   String
  LongtermReviewStores   LongtermReviewStore[]
}

model DeliveryOption {
  id                String     @id @default(auto()) @map("_id") @db.ObjectId
  nama              String
  description       String
  time_multiplier   Float
  price_multiplier  Float
  Bills             Bill[]
}
